{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","TodoList","todolist","map","username","getUser","userId","usersFromServer","find","todos","App","useState","setTitle","userName","setUserName","setUserId","hasUser","setHasUser","hasTitle","setHasTitle","isFormValid","setIsFormValid","isFormSubmitted","setIsFormSubmitted","listTodo","setListTodo","useEffect","trim","length","action","method","onSubmit","event","preventDefault","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e3e555e.chunk.js","sourcesContent":["import './UserInfo.scss';\nimport React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todolist: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todolist }) => {\n  return (\n    <section className=\"TodoList\">\n      {todolist.map((todo: Todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasUser, setHasUser] = useState(true);\n  const [hasTitle, setHasTitle] = useState(true);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const [listTodo, setListTodo] = useState<Todo[]>(todos);\n\n  const handleSubmit = (\n    event: React.FormEvent<HTMLFormElement | HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    setIsFormSubmitted(true);\n    const user = getUser(userId);\n    const nextId = Math.max(...listTodo.map(todo => todo.id));\n\n    const newTodo: Todo = {\n      id: nextId + 1,\n      title,\n      completed: false,\n      userId,\n      user: user ?? null,\n    };\n\n    if (isFormValid) {\n      setListTodo([...listTodo, newTodo]);\n      setTitle('');\n      setUserName('');\n      setIsFormSubmitted(false);\n    }\n  };\n\n  useEffect(() => {\n    setHasTitle(!!title.trim().length);\n  }, [title]);\n\n  useEffect(() => {\n    setHasUser(!!userName);\n  }, [userName]);\n\n  useEffect(() => {\n    setIsFormValid(hasTitle && hasUser);\n  }, [hasTitle, hasUser]);\n\n  const handleUserChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    if (name === 'userName') {\n      setUserName(value);\n      setHasUser(true);\n      setUserId(+value);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      setTitle(value);\n      setHasTitle(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            id=\"titleInput\"\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {!isFormValid && isFormSubmitted && !hasTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userInput\">User: </label>\n\n          <select\n            id=\"userInput\"\n            name=\"userName\"\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }: User) => {\n              return <option key={id} value={id}>{name}</option>;\n            })}\n          </select>\n          {!isFormValid && isFormSubmitted && !hasUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todolist={listTodo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}